{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Сontainer.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/selectors.js","services/service-api.js","redux/operations.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","id","name","number","_","payload","state","filter","isLoading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","logger","rootReducer","contacts","phonebookReducer","store","configureStore","reducer","devTools","process","getContacts","getFilter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","addContact","contact","axios","post","deleteContact","delete","defaults","baseURL","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","onSubmit","a","serviceApi","data","operations","resetName","resetNumber","className","styles","form_block","e","preventDefault","includeName","reduce","acc","includeNumber","alert","newContact","form_title","form_input","type","value","placeholder","onChange","currentTarget","form_button","ContactList","onDeleteContact","then","catch","contacts_section","contact_list","map","list_item","list_button","onClick","Filter","filter_text","filter_input","event","actions","target","Container","children","container","App","loadingContacts","useEffect","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ad3dfbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_section\":\"ContactList_contacts_section__2Fnok\",\"contact_list\":\"ContactList_contact_list__2oLZQ\",\"list_item\":\"ContactList_list_item__90PDn\",\"list_button\":\"ContactList_list_button__3KlQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_text\":\"Filter_filter_text__3vGIZ\",\"filter_input\":\"Filter_filter_input__2Rez4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Сontainer_container__3Rfoh\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from \"./actions\";\r\n\r\nconst items = createReducer(\r\n  // [],\r\n  [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  {\r\n    [fetchContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  }\r\n);\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsRequest]: () => null,\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactRequest]: () => null,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactRequest]: () => null,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport logger from \"redux-logger\";\r\nimport phonebookReducer from \"./reducer\";\r\n\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: false,\r\n  logger,\r\n});\r\n\r\n// const middleware = [\r\n//   ...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n//   }),\r\n//   logger,\r\n// ];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phonebookReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getLoading = (state) => state.contacts.loading;\r\nexport const getError = (state) => state.contacts.error;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\n\r\nexport function fetchContacts() {\r\n  return axios.get(`/`);\r\n}\r\n\r\nexport function addContact(contact) {\r\n  return axios.post(\"/contacts\", contact);\r\n}\r\nexport function deleteContact(id) {\r\n  return axios.delete(`/contacts/${id}`);\r\n}\r\n","import * as serviceApi from \"../services/service-api\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./actions\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await serviceApi.fetchContacts();\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => async (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await serviceApi.addContact(contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  serviceApi\r\n    .deleteContact(id)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/selectors\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport * as operations from \"../../redux/operations\";\r\n\r\nexport default function ContactForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const onSubmit = (name, number) =>\r\n    dispatch(operations.addContact(name, number));\r\n\r\n  const newContact = () => {\r\n    const includeName = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      []\r\n    );\r\n    const includeNumber = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      []\r\n    );\r\n    if (name === \"\" || number === \"\") {\r\n      alert(\"Please enter all fields!\");\r\n      return true;\r\n    }\r\n    if (includeName.includes(name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return true;\r\n    } else if (includeNumber.includes(number)) {\r\n      alert(`${number} is already in contacts`);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    resetName();\r\n    resetNumber();\r\n    if (newContact()) {\r\n      return;\r\n    }\r\n    onSubmit(name, number);\r\n  };\r\n\r\n  const handleChangeName = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n\r\n  const resetName = () => {\r\n    setName(\"\");\r\n  };\r\n\r\n  const resetNumber = () => {\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form_block} onSubmit={handleSubmit}>\r\n      <label className={styles.form_title}>\r\n        Name\r\n        <input\r\n          className={styles.form_input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"Name Surname\"\r\n          onChange={handleChangeName}\r\n        />\r\n      </label>\r\n      <label className={styles.form_title}>\r\n        Number\r\n        <input\r\n          className={styles.form_input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChangeNumber}\r\n          placeholder=\"000-00-00\"\r\n        />\r\n      </label>\r\n      <button className={styles.form_button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/operations\";\r\nimport { getVisibleContacts } from \"../../redux/selectors\";\r\nimport React from \"react\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <div className={styles.contacts_section}>\r\n      <ul className={styles.contact_list}>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li className={styles.list_item} key={id}>\r\n            {`${name} : ${number}`}\r\n            {\r\n              <button\r\n                className={styles.list_button}\r\n                type=\"button\"\r\n                name=\"delete\"\r\n                onClick={() => onDeleteContact(id)}\r\n              >\r\n                delete\r\n              </button>\r\n            }\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import styles from \"./Filter.module.css\";\r\nimport { getFilter } from \"../../redux/selectors\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = (event) =>\r\n    dispatch(actions.changeFilter(event.target.value));\r\n  return (\r\n    <div className={styles.filter_text}>\r\n      Find contacts by name:\r\n      <input\r\n        className={styles.filter_input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import styles from \"./Сontainer.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport Container from \"./components/Container/Container\";\r\nimport { fetchContacts } from \"./redux/operations\";\r\nimport { getLoading } from \"./redux/selectors\";\r\n\r\nexport default function App() {\r\n  const loadingContacts = useSelector(getLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      {loadingContacts && <p>Loading...</p>}\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n\r\n// import React, { Component } from \"react\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// import ContactList from \"./components/ContactList\";\r\n// import Filter from \"./components/Filter\";\r\n// import ContactForm from \"./components/ContactForm\";\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     contacts: [\r\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n//     ],\r\n//     filter: \"\",\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     try {\r\n//       const contacts = localStorage.getItem(\"contacts\");\r\n//       if (contacts) {\r\n//         const parseContacts = JSON.parse(contacts);\r\n\r\n//         this.setState({ contacts: parseContacts });\r\n//       }\r\n//     } catch (e) {\r\n//       console.log(\"error occurred\");\r\n//       console.log(e);\r\n//     }\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (prevState.contacts !== this.state.contacts) {\r\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n//     }\r\n//   }\r\n\r\n//   addContact = (item) => {\r\n//     const searchSameName = this.state.contacts\r\n//       .map((cont) => cont.name)\r\n//       .includes(item.name);\r\n//     if (searchSameName) {\r\n//       alert(`${item.name} is already in contacts`);\r\n//     } else if (item.name.length === 0 || item.number.length === 0) {\r\n//       alert(\"Fields must be filled!\");\r\n//     } else {\r\n//       const contact = { id: uuidv4(), ...item };\r\n//       this.setState((prevState) => ({\r\n//         contacts: [...prevState.contacts, contact],\r\n//       }));\r\n//     }\r\n//   };\r\n\r\n//   changeFilter = (filter) => {\r\n//     this.setState({ filter });\r\n//   };\r\n\r\n//   getVisibleContacts = () => {\r\n//     const { contacts, filter } = this.state;\r\n//     const normalizedFilter = filter.toLowerCase();\r\n//     return contacts.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter)\r\n//     );\r\n//   };\r\n\r\n//   removeContact = (contactId) => {\r\n//     this.setState((prevState) => {\r\n//       return {\r\n//         contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     const { filter } = this.state;\r\n//     const visibleContacts = this.getVisibleContacts();\r\n//     return (\r\n//       <div>\r\n//         <h1>Phonebook</h1>\r\n//         <ContactForm onAddContact={this.addContact} />\r\n//         <h2>Contacts</h2>\r\n//         <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n//         <ContactList\r\n//           contacts={visibleContacts}\r\n//           onRemoveContact={this.removeContact}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_block\":\"ContactForm_form_block__2wsfM\",\"form_title\":\"ContactForm_form_title__2XDXX\",\"form_input\":\"ContactForm_form_input__HZskq\",\"form_button\":\"ContactForm_form_button__Bezgb\"};"],"sourceRoot":""}